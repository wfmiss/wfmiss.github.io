(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{485:function(t,e,a){"use strict";a.r(e);var _=a(29),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第一章-基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章-基础语法"}},[t._v("#")]),t._v(" 第一章 基础语法")]),t._v(" "),a("p",[a("strong",[t._v("注意事项：编写代码注意：代码里的符号一定要是英文状态下的标点符号！！！，不要用中文！！！")])]),t._v(" "),a("h2",{attrs:{id:"_1、输出函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、输出函数"}},[t._v("#")]),t._v(" 1、输出函数")]),t._v(" "),a("p",[a("code",[t._v('printf("Hello World!\\n");')]),t._v(" "),a("code",[t._v('""')]),t._v("⾥⾯的内容叫做"),a("code",[t._v("“字符串”")]),t._v("，"),a("code",[t._v("printf")]),t._v("会把其中的内容原封不动地输出"),a("code",[t._v("\\n")]),t._v("表⽰需要在输出的结果后⾯换⼀⾏。")]),t._v(" "),a("p",[t._v("补充：")]),t._v(" "),a("ul",[a("li",[t._v("如果你在使⽤Dev C++ 4.9.9.2\n"),a("code",[t._v('system("pause");')])]),t._v(" "),a("li",[t._v("让程序运⾏完成后，窗⼝还能留下")]),t._v(" "),a("li",[t._v("不是Dev C++ 4.9.9.2就不需要这个了")])]),t._v(" "),a("h2",{attrs:{id:"_2、运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、运算符"}},[t._v("#")]),t._v(" 2、运算符")]),t._v(" "),a("p",[a("strong",[t._v("算数运算符")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("C符号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("意义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("+")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("加")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("减")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("*")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("乘")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("/")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("除")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("取余")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("()")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("括号")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("++")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("自增")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("--")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("自减")])])])]),t._v(" "),a("p",[a("strong",[t._v("关系运算符")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("C符号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("意义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(">")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("==")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(">=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小于等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("!=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不等于")])])])]),t._v(" "),a("p",[a("strong",[t._v("逻辑运算符")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("C符号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("意义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("！")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("非")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("&&")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("与")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("||")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("或")])])])]),t._v(" "),a("p",[t._v("位运算符：【>>,<<,~,|,^,&】\n赋值运算符：【"),a("code",[t._v("=")]),t._v("】\n条件运算符（三元运算符）：【"),a("code",[t._v("常量表达式？返回值1:返回值2;")]),t._v("】\n逗号运算符：【"),a("code",[t._v(",")]),t._v("】\n指针运算符：【"),a("code",[t._v("*")]),t._v(",&】\n求字节数运算符：【"),a("code",[t._v("sizeof")]),t._v("】")]),t._v(" "),a("h2",{attrs:{id:"_3、变量定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、变量定义"}},[t._v("#")]),t._v(" 3、变量定义")]),t._v(" "),a("p",[t._v("变量定义的⼀般形式就是："),a("code",[t._v("<类型名称> <变量名称>;")]),t._v("\n例如："),a("code",[t._v("int a;")])]),t._v(" "),a("h2",{attrs:{id:"_4、变量的名字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、变量的名字"}},[t._v("#")]),t._v(" 4、变量的名字")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("变量需要⼀个名字，变量的名字是⼀种“标识符”，意思是它是⽤来识别这个和那个的不同的名字。")])]),t._v(" "),a("li",[a("p",[t._v("标识符有标识符的构造规则。基本的原则是：标识符只能由字⺟、数字和下划线组成，数字不可以出现在第⼀个位置上，C语⾔的关键字（有的地⽅叫它们保留字）不可以⽤做标识符。\n"),a("strong",[t._v("C语⾔的保留字：")])])])]),t._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v("  auto、break、case、char、const 、continue、default、do、double 、else、enum、extern、float、for、goto、if、int、long、register、return、short、signed、sizeof、static、 struct、switch、typedef、union、unsigned、void、volatile、while、inline、restrict\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("赋值和初始化")]),t._v(" "),a("code",[t._v("int price = 0;")]),t._v("\n这⼀⾏，定义了⼀个变量。变量的名字是"),a("code",[t._v("price")]),t._v("，类型是"),a("code",[t._v("int")]),t._v("，初始值是"),a("code",[t._v("0")]),t._v("。\n这⾥的"),a("code",[t._v("“＝”")]),t._v("是⼀个赋值运算符，表⽰将"),a("code",[t._v("“＝”")]),t._v("右边的值赋给左边的变量。")]),t._v(" "),a("h2",{attrs:{id:"_5、变量初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、变量初始化"}},[t._v("#")]),t._v(" 5、变量初始化")]),t._v(" "),a("p",[t._v("如果没有进行初始化变量，直接使用，运算出来的结果会是一个很奇怪的值。\n格式为："),a("code",[t._v("<类型名称> <变量名称> = <初始值>;")])]),t._v(" "),a("blockquote",[a("p",[t._v("当赋值发⽣在定义变量的时候，就像程序1中的第7⾏那样，就是变量的初始化。虽然C语⾔并没有强制要求所有的变量都在定义的地⽅做初始化，但是所有的变量在第⼀次被使⽤（出现在赋值运算符的右边）之前被应该赋值⼀次。")])]),t._v(" "),a("h2",{attrs:{id:"_6、变量类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、变量类型"}},[t._v("#")]),t._v(" 6、变量类型")]),t._v(" "),a("p",[t._v("C是⼀种有类型的语⾔，所有的变量在使⽤之前必须定义或声明，所有的变量必须具有确定的数据类型。数据类型表⽰在变量中可以存放什么样的数据，变量中只能存放指定类型的数据，程序运⾏过程中也不能改变变量的类型。")]),t._v(" "),a("p",[a("strong",[t._v("六种基本数据类型。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("变量类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("字节大小")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符型类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("短整型类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("整型类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("长整型类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4or8")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("单精度浮点类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("双精度浮点类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8")])])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("signed")]),t._v(":有符号，可省略")]),t._v(" "),a("li",[a("code",[t._v("unsigned")]),t._v(":无符号")])]),t._v(" "),a("h2",{attrs:{id:"_7、常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、常量"}},[t._v("#")]),t._v(" 7、常量")]),t._v(" "),a("p",[t._v("C99允许使用"),a("strong",[t._v("常变量")]),t._v("，方法是在定义变量时，前面加一个关键字"),a("code",[t._v("const")]),t._v("。\n符号常量"),a("code",[t._v("#define")]),t._v("：用法"),a("code",[t._v("#define 常量名 值")]),t._v("，注意行末没有分号。")]),t._v(" "),a("h2",{attrs:{id:"_8、转义字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、转义字符"}},[t._v("#")]),t._v(" 8、转义字符")]),t._v(" "),a("p",[t._v("转义字符及其作用")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wfmiss/pictures/C_language/20210510175613.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_9、输入函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、输入函数"}},[t._v("#")]),t._v(" 9、输入函数")]),t._v(" "),a("p",[a("code",[t._v("scanf(“格式控制字符串”, 地址表列);")]),t._v("\n格式控制字符串的作用与printf函数相同，但不能显示非格式字符串，也就是不能显示提示字符串。地址表列中给出各变量的地址。地址是由地址运算符“&”后跟变量名组成的。\n例如：")]),t._v(" "),a("div",{staticClass:"language-C line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input a,b,c\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scanf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d%d%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a=%d,b=%d,c=%d"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("** 格式字符串**\n格式字符串的一般形式为：\n"),a("code",[t._v("%[*][输入数据宽度][长度]类型")]),t._v("\n其中有方括号[]的项为任选项。各项的意义如下。\n"),a("strong",[t._v("类型")]),t._v("\n表示输入数据的类型，其格式符和意义如下表所示。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("格式")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("字符意义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%d")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输入十进制整数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%o")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输入八进制整数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%x")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输入十六进制整数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%u")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输入无符号十进制整数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%f或%e")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输入实型数(用小数形式或指数形式)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%c")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输入单个字符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%s")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输入字符串")])])])]),t._v(" "),a("p",[a("strong",[t._v("使用scanf函数还必须注意以下几点：")])]),t._v(" "),a("ol",[a("li",[t._v('scanf函数中没有精度控制，如：scanf("%5.2f",&a);是非法的。不能企图用此语句输入小数为2位的实数。')]),t._v(" "),a("li",[t._v('scanf中要求给出变量地址，如给出变量名则会出错。如 scanf("%d",a);是非法的，应改为scnaf("%d",&a);才是合法的。')]),t._v(" "),a("li",[t._v("在输入多个数值数据时，若格式控制串中没有非格式字符作输入数据之间的间隔则可用空格，TAB或回车作间隔。C编译在碰到空格，TAB，回车或非法数据(如对“%d”输入“12A”时，A即为非法数据)时即认为该数据结束。")]),t._v(" "),a("li",[t._v("在输入字符数据时，若格式控制串中无非格式字符，则认为所有输入的字符均为有效字符。")])]),t._v(" "),a("p",[a("strong",[t._v("printf格式附加字符")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("l")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("长整型整数，可加在格式符d、o、x、u前面")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("m(代表一个正整数)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数据最小宽度")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("n(代表一个正整数)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("对实数，表示输出n位小数；对字符串，表示截取的字符个数;")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输出的数字或字符域内向左靠")])])])]),t._v(" "),a("p",[t._v("一般形式为："),a("code",[t._v("% 附加字符 格式字符")])]),t._v(" "),a("p",[a("strong",[t._v("scanf格式附加字符")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("l")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输入长整型数据（可用%ld，%lo，%lx，%lu）以及double型数据（用%lf或%le）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("h")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("输入短整型数据（可用%hd，%ho，%hx）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("域宽")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("指定输入输入数据所占宽度（列数），宽域应为正整数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("*")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("本输入项在读入后不赋给相应变量")])])])]),t._v(" "),a("h2",{attrs:{id:"_10、运算符优先级和结合性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、运算符优先级和结合性"}},[t._v("#")]),t._v(" 10、运算符优先级和结合性")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wfmiss/pictures/C_language/20210511161914.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wfmiss/pictures/C_language/20210511161913.png",alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wfmiss/pictures/C_language/20210511161912.png",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("上表中可以总结出如下规律：")])]),t._v(" "),a("ol",[a("li",[t._v("结合方向只有三个是从右往左，其余都是从左往右。")]),t._v(" "),a("li",[t._v("所有双目运算符中只有赋值运算符的结合方向是从右往左。")]),t._v(" "),a("li",[t._v("另外两个从右往左结合的运算符也很好记，因为它们很特殊：一个是单目运算符，一个是三目运算符。")]),t._v(" "),a("li",[t._v("C语言中有且只有一个三目运算符。")]),t._v(" "),a("li",[t._v("逗号运算符的优先级最低，要记住。")]),t._v(" "),a("li",[t._v("此外要记住，对于优先级：算术运算符 > 关系运算符 > 逻辑运算符 > 赋值运算符。逻辑运算符中“逻辑非 !”除外。")])]),t._v(" "),a("h2",{attrs:{id:"_11、一些容易出错的优先级问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、一些容易出错的优先级问题"}},[t._v("#")]),t._v(" 11、一些容易出错的优先级问题")]),t._v(" "),a("p",[t._v("上表中，优先级同为1 的几种运算符如果同时出现，那怎么确定表达式的优先级呢？这是很多初学者迷糊的地方。下表就整理了这些容易出错的情况：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("优先级问题")]),t._v(" "),a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("经常误认为的结果")]),t._v(" "),a("th",[t._v("实际结果")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v(".")]),t._v(" 的优先级高于 "),a("code",[t._v("*")]),t._v("（-> 操作符用于消除这个问题）")]),t._v(" "),a("td",[a("code",[t._v("*")]),t._v("p.f")]),t._v(" "),a("td",[t._v("p 所指对象的字段 f，等价于： ("),a("code",[t._v("*")]),t._v("p).f")]),t._v(" "),a("td",[t._v("对 p 取 f 偏移，作为指针，然后进行解除引用操作，等价于： "),a("code",[t._v("*")]),t._v("(p.f)")])]),t._v(" "),a("tr",[a("td",[t._v("[] 高于 "),a("code",[t._v("*")])]),t._v(" "),a("td",[t._v("int "),a("code",[t._v("*")]),t._v("ap[]")]),t._v(" "),a("td",[t._v("ap 是个指向 int 数组的指针，等价于： int ("),a("code",[t._v("*")]),t._v("ap)[]")]),t._v(" "),a("td",[t._v("ap 是个元素为 int 指针的数组，等价于： int "),a("code",[t._v("*")]),t._v("(ap [])")])]),t._v(" "),a("tr",[a("td",[t._v("函数 () 高于 "),a("code",[t._v("*")])]),t._v(" "),a("td",[t._v("int "),a("code",[t._v("*")]),t._v("fp()")]),t._v(" "),a("td",[t._v("fp 是个函数指针，所指函数返回 int，等价于： int ("),a("code",[t._v("*")]),t._v("fp)()")]),t._v(" "),a("td",[t._v("fp 是个函数，返回 int"),a("code",[t._v("*")]),t._v("，等价于： int"),a("code",[t._v("*")]),t._v("( fp() )")])]),t._v(" "),a("tr",[a("td",[t._v("== 和 != 高于位操作")]),t._v(" "),a("td",[t._v("(val & mask != 0)")]),t._v(" "),a("td",[t._v("(val &mask) != 0")]),t._v(" "),a("td",[t._v("val & (mask != 0)")])]),t._v(" "),a("tr",[a("td",[t._v("== 和 != 高于赋值符")]),t._v(" "),a("td",[t._v("c = getchar() != EOF")]),t._v(" "),a("td",[t._v("(c = getchar()) != EOF")]),t._v(" "),a("td",[t._v("c = (getchar() != EOF)")])]),t._v(" "),a("tr",[a("td",[t._v("算术运算符高于位移 运算符")]),t._v(" "),a("td",[t._v("msb << 4 + lsb")]),t._v(" "),a("td",[t._v("(msb << 4) + lsb")]),t._v(" "),a("td",[t._v("msb << (4 + lsb)")])]),t._v(" "),a("tr",[a("td",[t._v("逗号运算符在所有运 算符中优先级最低")]),t._v(" "),a("td",[t._v("i = 1, 2")]),t._v(" "),a("td",[t._v("i = (1,2)")]),t._v(" "),a("td",[t._v("(i = 1), 2")])])])]),t._v(" "),a("h2",{attrs:{id:"_12、不同类型数据间的混合运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、不同类型数据间的混合运算"}},[t._v("#")]),t._v(" 12、不同类型数据间的混合运算")]),t._v(" "),a("p",[t._v("（1）+、-、"),a("code",[t._v("*")]),t._v("、/、运算符两侧中有一个为float或double型，结果都为double型数据。\n（2）如果 int型与float型数据进行运算，会先把int型和和float型数据转换为double型，然后再进行运算，结果是double型\n（3）字符（char）型数据与整形数据进行运算，就是把字符型数据的ASCLL代码与整形数据进行运算。如：12+'A'等效于12+65结果为77，字符型数据与实型数据进行运算，则会将字符型的ASCLL代码转换为double型数据然后再进行运算。")]),t._v(" "),a("p",[t._v("以上的转换都是由编译器自动完成转换的，知道其转换的原理即可，不用自己进行转换。")])])}),[],!1,null,null,null);e.default=v.exports}}]);